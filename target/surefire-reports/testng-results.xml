<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="7" total="29" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="PriceRule" duration-ms="746714" started-at="2018-05-15T11:33:48Z" finished-at="2018-05-15T11:46:15Z">
    <groups>
    </groups>
    <test name="AddPriceRule" duration-ms="746714" started-at="2018-05-15T11:33:48Z" finished-at="2018-05-15T11:46:15Z">
      <class name="com.pricerule.sc.testcases.ExpiredpriceRule">
        <test-method status="PASS" signature="loginSc()[pri:13, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="loginSc" duration-ms="15502" started-at="2018-05-15T11:40:34Z" finished-at="2018-05-15T11:40:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSc -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:40:50Z" finished-at="2018-05-15T11:40:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginSc status=SUCCESS method=ExpiredpriceRule.loginSc()[pri:13, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="expiredDatePriceRule()[pri:14, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="expiredDatePriceRule" duration-ms="39317" started-at="2018-05-15T11:40:50Z" finished-at="2018-05-15T11:41:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expiredDatePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:41:29Z" finished-at="2018-05-15T11:41:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=expiredDatePriceRule status=SUCCESS method=ExpiredpriceRule.expiredDatePriceRule()[pri:14, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="inactivePriceRule()[pri:15, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="inactivePriceRule" duration-ms="21327" started-at="2018-05-15T11:41:29Z" finished-at="2018-05-15T11:41:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inactivePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:41:50Z" finished-at="2018-05-15T11:41:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inactivePriceRule status=SUCCESS method=ExpiredpriceRule.inactivePriceRule()[pri:15, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="deletePriceRule()[pri:16, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="deletePriceRule" duration-ms="5024" started-at="2018-05-15T11:41:50Z" finished-at="2018-05-15T11:41:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:41:55Z" finished-at="2018-05-15T11:41:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deletePriceRule status=SUCCESS method=ExpiredpriceRule.deletePriceRule()[pri:16, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="withouisPrimary()[pri:17, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="withouisPrimary" duration-ms="169827" started-at="2018-05-15T11:41:55Z" finished-at="2018-05-15T11:44:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withouisPrimary -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:44:45Z" finished-at="2018-05-15T11:44:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withouisPrimary status=SUCCESS method=ExpiredpriceRule.withouisPrimary()[pri:17, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown1()[pri:18, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="tearDown1" duration-ms="1269" started-at="2018-05-15T11:44:45Z" finished-at="2018-05-15T11:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:44:47Z" finished-at="2018-05-15T11:44:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tearDown1 status=SUCCESS method=ExpiredpriceRule.tearDown1()[pri:18, instance:com.pricerule.sc.testcases.ExpiredpriceRule@50f8360d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.pricerule.sc.testcases.ExpiredpriceRule -->
      <class name="com.pricerule.frontend.testcases.FrontEndInActivePriceRule">
        <test-method status="PASS" signature="expiredPriceRule()[pri:19, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="expiredPriceRule" duration-ms="18373" started-at="2018-05-15T11:44:47Z" finished-at="2018-05-15T11:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expiredPriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:45:05Z" finished-at="2018-05-15T11:45:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=expiredPriceRule status=SUCCESS method=FrontEndInActivePriceRule.expiredPriceRule()[pri:19, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="inActivePriceRule()[pri:20, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="inActivePriceRule" duration-ms="29325" started-at="2018-05-15T11:45:05Z" finished-at="2018-05-15T11:45:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inActivePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:45:34Z" finished-at="2018-05-15T11:45:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inActivePriceRule status=SUCCESS method=FrontEndInActivePriceRule.inActivePriceRule()[pri:20, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="withoutIsPrimary()[pri:21, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="withoutIsPrimary" duration-ms="17520" started-at="2018-05-15T11:45:34Z" finished-at="2018-05-15T11:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withoutIsPrimary -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:45:52Z" finished-at="2018-05-15T11:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withoutIsPrimary status=SUCCESS method=FrontEndInActivePriceRule.withoutIsPrimary()[pri:21, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="deletedPriceRule()[pri:22, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="deletedPriceRule" duration-ms="22868" started-at="2018-05-15T11:45:52Z" finished-at="2018-05-15T11:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletedPriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:46:15Z" finished-at="2018-05-15T11:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deletedPriceRule status=SUCCESS method=FrontEndInActivePriceRule.deletedPriceRule()[pri:22, instance:com.pricerule.frontend.testcases.FrontEndInActivePriceRule@2cb4c3ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.pricerule.frontend.testcases.FrontEndInActivePriceRule -->
      <class name="com.pricerule.sc.testcases.AddingpriceRuleDlr">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="setUp" is-config="true" duration-ms="128" started-at="2018-05-15T11:33:48Z" finished-at="2018-05-15T11:33:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginSc()[pri:1, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="loginSc" duration-ms="16059" started-at="2018-05-15T11:33:48Z" finished-at="2018-05-15T11:34:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSc -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="2" started-at="2018-05-15T11:34:04Z" finished-at="2018-05-15T11:34:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginSc status=SUCCESS method=AddingpriceRuleDlr.loginSc()[pri:1, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="tradeinDiscount()[pri:2, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="tradeinDiscount" duration-ms="4205" started-at="2018-05-15T11:34:04Z" finished-at="2018-05-15T11:34:08Z">
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[element not visible
  (Session info: chrome=66.0.3359.170)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'IZDT-211', ip: '10.125.101.16', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_73'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\rajesh.n\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.170, webStorageEnabled: true}
Session ID: d623ed81372390e096501d6199f10e17]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: element not visible
  (Session info: chrome=66.0.3359.170)
  (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'IZDT-211', ip: '10.125.101.16', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_73'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\rajesh.n\AppData\L...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.170, webStorageEnabled: true}
Session ID: d623ed81372390e096501d6199f10e17
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at com.sc.qa.modules.PriceruleDealer.manageInventory(PriceruleDealer.java:112)
at com.pricerule.sc.testcases.AddingpriceRuleDlr.tradeinDiscount(AddingpriceRuleDlr.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tradeinDiscount -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="3" started-at="2018-05-15T11:34:08Z" finished-at="2018-05-15T11:34:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tradeinDiscount status=FAILURE method=AddingpriceRuleDlr.tradeinDiscount()[pri:2, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="dealerDiscount()[pri:3, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="dealerDiscount" duration-ms="34801" started-at="2018-05-15T11:34:08Z" finished-at="2018-05-15T11:34:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dealerDiscount -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:34:43Z" finished-at="2018-05-15T11:34:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dealerDiscount status=SUCCESS method=AddingpriceRuleDlr.dealerDiscount()[pri:3, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="oemDiscount()[pri:4, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="oemDiscount" duration-ms="10561" started-at="2018-05-15T11:34:43Z" finished-at="2018-05-15T11:34:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oemDiscount -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:34:54Z" finished-at="2018-05-15T11:34:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=oemDiscount status=SUCCESS method=AddingpriceRuleDlr.oemDiscount()[pri:4, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="greenDiscount()[pri:5, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="greenDiscount" duration-ms="274575" started-at="2018-05-15T11:34:54Z" finished-at="2018-05-15T11:39:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greenDiscount -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:39:28Z" finished-at="2018-05-15T11:39:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=greenDiscount status=SUCCESS method=AddingpriceRuleDlr.greenDiscount()[pri:5, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:6, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="tearDown" duration-ms="1283" started-at="2018-05-15T11:39:28Z" finished-at="2018-05-15T11:39:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:39:29Z" finished-at="2018-05-15T11:39:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tearDown status=SUCCESS method=AddingpriceRuleDlr.tearDown()[pri:6, instance:com.pricerule.sc.testcases.AddingpriceRuleDlr@234bef66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.pricerule.sc.testcases.AddingpriceRuleDlr -->
      <class name="com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule">
        <test-method status="PASS" signature="renualtdealerinvtUrl()[pri:8, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="renualtdealerinvtUrl" duration-ms="14651" started-at="2018-05-15T11:39:49Z" finished-at="2018-05-15T11:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- renualtdealerinvtUrl -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:40:04Z" finished-at="2018-05-15T11:40:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=renualtdealerinvtUrl status=SUCCESS method=FrontEndRenaultDealerPriceRule.renualtdealerinvtUrl()[pri:8, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tradeInDiscountPriceRule()[pri:9, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="tradeInDiscountPriceRule" duration-ms="4263" started-at="2018-05-15T11:40:04Z" finished-at="2018-05-15T11:40:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tradeInDiscountPriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:40:08Z" finished-at="2018-05-15T11:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tradeInDiscountPriceRule status=SUCCESS method=FrontEndRenaultDealerPriceRule.tradeInDiscountPriceRule()[pri:9, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tradeInDiscountWithOutPriceRule()[pri:10, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="tradeInDiscountWithOutPriceRule" duration-ms="11561" started-at="2018-05-15T11:40:08Z" finished-at="2018-05-15T11:40:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tradeInDiscountWithOutPriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:40:20Z" finished-at="2018-05-15T11:40:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tradeInDiscountWithOutPriceRule status=SUCCESS method=FrontEndRenaultDealerPriceRule.tradeInDiscountWithOutPriceRule()[pri:10, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="dealerDiscountMakePriceRule()[pri:11, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="dealerDiscountMakePriceRule" duration-ms="6704" started-at="2018-05-15T11:40:20Z" finished-at="2018-05-15T11:40:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dealerDiscountMakePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="getResult" is-config="true" duration-ms="0" started-at="2018-05-15T11:40:26Z" finished-at="2018-05-15T11:40:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dealerDiscountMakePriceRule status=SUCCESS method=FrontEndRenaultDealerPriceRule.dealerDiscountMakePriceRule()[pri:11, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="dealerDiscountotherMakePriceRule()[pri:12, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="dealerDiscountotherMakePriceRule" duration-ms="7077" started-at="2018-05-15T11:40:26Z" finished-at="2018-05-15T11:40:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dealerDiscountotherMakePriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:40:33Z" finished-at="2018-05-15T11:40:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dealerDiscountotherMakePriceRule status=SUCCESS method=FrontEndRenaultDealerPriceRule.dealerDiscountotherMakePriceRule()[pri:12, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule@61dc03ce]" name="closeBrowser" is-config="true" duration-ms="824" started-at="2018-05-15T11:40:33Z" finished-at="2018-05-15T11:40:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.pricerule.frontend.testcases.FrontEndRenaultDealerPriceRule -->
      <class name="com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule">
        <test-method status="PASS" signature="citroenpriceRuleDlr()[pri:0, instance:com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule@737996a0]" name="citroenpriceRuleDlr" is-config="true" duration-ms="14272" started-at="2018-05-15T11:39:29Z" finished-at="2018-05-15T11:39:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- citroenpriceRuleDlr -->
        <test-method status="PASS" signature="withPriceRule()[pri:7, instance:com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule@737996a0]" name="withPriceRule" duration-ms="5479" started-at="2018-05-15T11:39:44Z" finished-at="2018-05-15T11:39:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withPriceRule -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule@737996a0]" name="getResult" is-config="true" duration-ms="1" started-at="2018-05-15T11:39:49Z" finished-at="2018-05-15T11:39:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=withPriceRule status=SUCCESS method=FrontEndCitroenDealerPriceRule.withPriceRule()[pri:7, instance:com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule@737996a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule@737996a0]" name="tearDown" is-config="true" duration-ms="202" started-at="2018-05-15T11:46:15Z" finished-at="2018-05-15T11:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pricerule.frontend.testcases.FrontEndCitroenDealerPriceRule -->
    </test> <!-- AddPriceRule -->
  </suite> <!-- PriceRule -->
</testng-results>
